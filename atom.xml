<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>脸滚键盘缺了个键</title>
  
  <subtitle>公众号『全栈技术精选』</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pythonnote.cn/"/>
  <updated>2020-03-03T15:08:30.172Z</updated>
  <id>http://www.pythonnote.cn/</id>
  
  <author>
    <name>小闫同学</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一起来看看火爆的手机号码一键登录</title>
    <link href="http://www.pythonnote.cn/%E4%B8%80%E8%B5%B7%E6%9D%A5%E7%9C%8B%E7%9C%8B%E7%81%AB%E7%88%86%E7%9A%84%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/"/>
    <id>http://www.pythonnote.cn/%E4%B8%80%E8%B5%B7%E6%9D%A5%E7%9C%8B%E7%9C%8B%E7%81%AB%E7%88%86%E7%9A%84%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/</id>
    <published>2020-03-03T13:41:59.000Z</published>
    <updated>2020-03-03T15:08:30.172Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;不知你是否发现：大批手机 &lt;code&gt;app&lt;/code&gt; 登录页面，突然之间变成了一键登录。之前大火的 &lt;code&gt;通过手机号码获取短信验证码&lt;/code&gt; 登录模式正悄悄退去。这神奇的操作是如何实现的呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="手机号一键登录" scheme="http://www.pythonnote.cn/categories/%E6%89%8B%E6%9C%BA%E5%8F%B7%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/"/>
    
    
      <category term="手机号一键登录" scheme="http://www.pythonnote.cn/tags/%E6%89%8B%E6%9C%BA%E5%8F%B7%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>有了Pycharm，就卸载了Postman吧</title>
    <link href="http://www.pythonnote.cn/%E6%9C%89%E4%BA%86Pycharm%EF%BC%8C%E5%B0%B1%E5%8D%B8%E8%BD%BD%E4%BA%86Postman%E5%90%A7/"/>
    <id>http://www.pythonnote.cn/%E6%9C%89%E4%BA%86Pycharm%EF%BC%8C%E5%B0%B1%E5%8D%B8%E8%BD%BD%E4%BA%86Postman%E5%90%A7/</id>
    <published>2020-02-28T12:04:12.000Z</published>
    <updated>2020-02-28T13:54:56.279Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt; 

&lt;p&gt;&lt;code&gt;Web&lt;/code&gt; 开发还在一手 &lt;code&gt;PyCharm&lt;/code&gt; 一手 &lt;code&gt;Postman&lt;/code&gt; 吗？快给电脑减负（卸载掉 &lt;code&gt;Postman&lt;/code&gt;）吧！教你如何使用 &lt;code&gt;PyCharm&lt;/code&gt; 替代 &lt;code&gt;Postman&lt;/code&gt; 。&lt;/p&gt;
    
    </summary>
    
    
      <category term="pycharm" scheme="http://www.pythonnote.cn/categories/pycharm/"/>
    
    
      <category term="pycharm" scheme="http://www.pythonnote.cn/tags/pycharm/"/>
    
      <category term="postman" scheme="http://www.pythonnote.cn/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>关系数据库之存储过程</title>
    <link href="http://www.pythonnote.cn/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>http://www.pythonnote.cn/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</id>
    <published>2020-02-25T10:48:02.000Z</published>
    <updated>2020-02-25T15:58:46.905Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;很多人在上学期间，也许并未学习过关系数据库中「存储过程」的相关内容，但在工作上是绕不开的，那今天就来学习一下吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="sql" scheme="http://www.pythonnote.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="http://www.pythonnote.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之聚类算法</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/</id>
    <published>2020-02-24T10:34:27.000Z</published>
    <updated>2020-02-24T07:05:45.609Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;今日开启新算法的学习「聚类算法」&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之集成学习</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-02-23T03:23:47.000Z</published>
    <updated>2020-02-24T02:36:21.500Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;分类算法中有一种极其重要的算法「集成学习」&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之决策树</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/</id>
    <published>2020-02-22T07:42:01.000Z</published>
    <updated>2020-02-22T11:44:35.860Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;今天来学习一种新的&lt;strong&gt;分类&lt;/strong&gt;算法「决策树」&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.pythonnote.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之逻辑回归</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</id>
    <published>2020-02-21T10:19:53.000Z</published>
    <updated>2020-02-23T03:24:50.272Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;逻辑回归（&lt;code&gt;Logistic Regression&lt;/code&gt;）是机器学习中的一种&lt;strong&gt;分类模型&lt;/strong&gt;。虽然名字中带有「回归」，但它却不是回归算法，而是一种分类算法。由于此算法的简单和高效，在实际场景中应用非常广泛。也许有人很好奇，那为什么叫做「回归」而不是「分类」呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之欠拟合和过拟合</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E6%AC%A0%E6%8B%9F%E5%90%88%E5%92%8C%E8%BF%87%E6%8B%9F%E5%90%88/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E6%AC%A0%E6%8B%9F%E5%90%88%E5%92%8C%E8%BF%87%E6%8B%9F%E5%90%88/</id>
    <published>2020-02-20T11:41:19.000Z</published>
    <updated>2020-02-20T14:36:34.861Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;引言：&lt;/strong&gt;机器学习的基本问题是利用模型对数据进行拟合，学习的目的并非是对有限训练集进行正确预测，而是对未曾在训练集合出现的样本能够正确预测。模型对训练集数据的误差称为经验误差，对测试集数据的误差称为泛化误差。模型对训练集以外样本的预测能力就称为模型的泛化能力，追求这种泛化能力始终是机器学习的目标。过拟合和欠拟合是导致模型泛化能力不高的两种常见原因，都是模型学习能力与数据复杂度之间失配的结果。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.pythonnote.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之线性回归的损失和优化</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%92%8C%E4%BC%98%E5%8C%96/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%92%8C%E4%BC%98%E5%8C%96/</id>
    <published>2020-02-19T10:36:38.000Z</published>
    <updated>2020-02-21T05:20:43.520Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;学习了线性回归，接下来就需要考虑其损失以及优化了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之线性回归</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</id>
    <published>2020-02-18T10:36:30.000Z</published>
    <updated>2020-02-20T12:08:07.324Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;机器学习中最常见的一类问题：线性回归问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之kd树</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8Bkd%E6%A0%91/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8Bkd%E6%A0%91/</id>
    <published>2020-02-17T11:04:01.000Z</published>
    <updated>2020-02-20T12:09:03.106Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;上篇文章讲了 &lt;code&gt;K-近邻算法&lt;/code&gt; ，但是引出了一个问题：&lt;/p&gt;
&lt;p&gt;实现 &lt;code&gt;K-近邻算法&lt;/code&gt; 时，&lt;strong&gt;主要考虑的问题是如何对训练数据进行快速 k 近邻搜索。&lt;/strong&gt;这在特征空间维数大及训练数据容量大时尤其必要。&lt;strong&gt;k 近邻法最简单的实现是线性扫描（穷举搜索），即要计算输入实例与每一个训练实例的距离。计算并存储好以后，再查找 K 近邻。&lt;/strong&gt;当训练集很大时，计算非常耗时。为了提高 &lt;code&gt;KNN&lt;/code&gt; 搜索的效率，可以考虑使用特殊的结构存储训练数据，以减小计算距离的次数。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.pythonnote.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之K-近邻算法</title>
    <link href="http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8BK-%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95/"/>
    <id>http://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8BK-%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95/</id>
    <published>2020-02-16T12:28:14.000Z</published>
    <updated>2020-02-20T12:08:47.711Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;&lt;code&gt;K Nearest Neighbor&lt;/code&gt; 算法又叫 &lt;code&gt;KNN&lt;/code&gt; 算法，此算法最早是由 &lt;code&gt;Cover&lt;/code&gt; 和 &lt;code&gt;Hart&lt;/code&gt; 提出的一种分类算法，是机器学习里面一个经典之作， 总体来说 &lt;code&gt;KNN&lt;/code&gt; 算法是相对比较容易理解的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="http://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>关系数据库之视图</title>
    <link href="http://www.pythonnote.cn/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E8%A7%86%E5%9B%BE/"/>
    <id>http://www.pythonnote.cn/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E8%A7%86%E5%9B%BE/</id>
    <published>2020-02-10T11:32:24.000Z</published>
    <updated>2020-02-10T12:43:09.954Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;请问视图是什么？视图相关语句有哪些？视图在什么场景下使用？夺命三连&lt;/p&gt;
    
    </summary>
    
    
      <category term="sql" scheme="http://www.pythonnote.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="http://www.pythonnote.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>git仓库上传了个无法点开的空文件夹是什么鬼？</title>
    <link href="http://www.pythonnote.cn/git%E4%BB%93%E5%BA%93%E4%B8%8A%E4%BC%A0%E4%BA%86%E4%B8%AA%E6%97%A0%E6%B3%95%E7%82%B9%E5%BC%80%E7%9A%84%E7%A9%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E6%98%AF%E4%BB%80%E4%B9%88%E9%AC%BC%EF%BC%9F/"/>
    <id>http://www.pythonnote.cn/git%E4%BB%93%E5%BA%93%E4%B8%8A%E4%BC%A0%E4%BA%86%E4%B8%AA%E6%97%A0%E6%B3%95%E7%82%B9%E5%BC%80%E7%9A%84%E7%A9%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E6%98%AF%E4%BB%80%E4%B9%88%E9%AC%BC%EF%BC%9F/</id>
    <published>2020-02-09T15:00:45.000Z</published>
    <updated>2020-02-19T03:41:00.570Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt; 

&lt;p&gt;诡异之事年年有，只是今年有点多，在仓库上传到 GitHub 后，偶然在 GitHub 中瞄了一眼，我的天？这个图标不像文件夹啊？这个怎么点不开？git 上传正常啊？本地工作区和暂存区都是干净的了啊？&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://www.pythonnote.cn/categories/git/"/>
    
    
      <category term="git" scheme="http://www.pythonnote.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch中join类型数据如何进行父子文档查询</title>
    <link href="http://www.pythonnote.cn/elasticsearch%E4%B8%ADjoin%E7%B1%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E7%88%B6%E5%AD%90%E6%96%87%E6%A1%A3%E6%9F%A5%E8%AF%A2/"/>
    <id>http://www.pythonnote.cn/elasticsearch%E4%B8%ADjoin%E7%B1%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E7%88%B6%E5%AD%90%E6%96%87%E6%A1%A3%E6%9F%A5%E8%AF%A2/</id>
    <published>2020-02-07T10:58:35.000Z</published>
    <updated>2020-02-07T07:48:03.118Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt; 

&lt;p&gt;ES 中 join 类型数据如何根据父文档查询全部子文档？又如何根据子文档查询其父文档呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="elasticsearch" scheme="http://www.pythonnote.cn/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://www.pythonnote.cn/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络知识点总结</title>
    <link href="http://www.pythonnote.cn/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>http://www.pythonnote.cn/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</id>
    <published>2020-02-02T10:43:23.000Z</published>
    <updated>2020-02-19T03:41:36.448Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;《计算机网络》第五版 谢希仁&lt;/strong&gt; 知识点大汇总&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://www.pythonnote.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="计算机网络" scheme="http://www.pythonnote.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch的一些小知识点</title>
    <link href="http://www.pythonnote.cn/elasticsearch%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://www.pythonnote.cn/elasticsearch%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2020-01-31T11:28:16.000Z</published>
    <updated>2020-02-19T03:40:49.868Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;这个假期有多少人新添了一份职业「云监工」，又有多少人干起了小区保安的工作（统计着进出小区的车辆），还有一些人无聊到数火龙果的「黑芝麻」…… 实不相瞒，我也一样，只不过无聊之际，偶尔看看书。之前对于 elasticsearch 介绍过一些常用的 API ，今天再做一些额外的补充。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;「云监工」：网络流行词，来源于央视频直播武汉开建的防治传染病医院火神山医院的建设工地，网友们虽然不能到现场出把力，但也给自己加了一个身份：云监工，通过直播镜头去“监督”医院的建设进度。&lt;/p&gt;
&lt;p&gt;小区保安工作：很多人在家无聊，自觉统计着出入小区人员车辆数量，以帮助监督是否有人在疫情期间四处乱逛。&lt;/p&gt;
&lt;p&gt;数火龙果的籽：这个起源于网友晒出的图片，为一个火龙果所有的籽标上了序号。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="elasticsearch" scheme="http://www.pythonnote.cn/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://www.pythonnote.cn/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>还在拧螺丝？是时候学习造航母了！</title>
    <link href="http://www.pythonnote.cn/%E8%BF%98%E5%9C%A8%E6%8B%A7%E8%9E%BA%E4%B8%9D%EF%BC%9F%E6%98%AF%E6%97%B6%E5%80%99%E5%AD%A6%E4%B9%A0%E9%80%A0%E8%88%AA%E6%AF%8D%E4%BA%86%EF%BC%81/"/>
    <id>http://www.pythonnote.cn/%E8%BF%98%E5%9C%A8%E6%8B%A7%E8%9E%BA%E4%B8%9D%EF%BC%9F%E6%98%AF%E6%97%B6%E5%80%99%E5%AD%A6%E4%B9%A0%E9%80%A0%E8%88%AA%E6%AF%8D%E4%BA%86%EF%BC%81/</id>
    <published>2020-01-30T11:58:02.000Z</published>
    <updated>2020-02-19T03:41:24.419Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;
面试造航母，实际拧螺丝。这是大部分互联网人面对的实际情境，如何跳出舒适的圈子，撤离局部，俯览大局？
    
    </summary>
    
    
      <category term="部署" scheme="http://www.pythonnote.cn/categories/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="架构" scheme="http://www.pythonnote.cn/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="部署" scheme="http://www.pythonnote.cn/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>docker的一些小知识</title>
    <link href="http://www.pythonnote.cn/docker%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    <id>http://www.pythonnote.cn/docker%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86/</id>
    <published>2020-01-29T11:10:49.000Z</published>
    <updated>2020-02-19T03:43:32.426Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;今天玩游戏的时候，突然想到了以前面试被问的一个小问题，特此记录，仅供参考&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://www.pythonnote.cn/categories/docker/"/>
    
    
      <category term="docker" scheme="http://www.pythonnote.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>图</title>
    <link href="http://www.pythonnote.cn/%E5%9B%BE/"/>
    <id>http://www.pythonnote.cn/%E5%9B%BE/</id>
    <published>2020-01-27T10:40:37.000Z</published>
    <updated>2020-02-19T03:42:10.922Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt; 
此图非彼图，今天来学习一种十分重要，在生活中也经常使用的数据结构「图」
    
    </summary>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="算法" scheme="http://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="http://www.pythonnote.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
