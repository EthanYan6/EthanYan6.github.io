<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EthanYan&#39;s Blog</title>
  
  <subtitle>公众号『全栈技术精选』</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.pythonnote.cn/"/>
  <updated>2020-03-22T08:17:00.323Z</updated>
  <id>https://www.pythonnote.cn/</id>
  
  <author>
    <name>小闫同学</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分布式id</title>
    <link href="https://www.pythonnote.cn/%E5%88%86%E5%B8%83%E5%BC%8Fid/"/>
    <id>https://www.pythonnote.cn/%E5%88%86%E5%B8%83%E5%BC%8Fid/</id>
    <published>2020-03-22T05:11:17.000Z</published>
    <updated>2020-03-22T08:17:00.323Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;当产品使用人数达到一定量级，一般会采用分库分表等优化操作，但是分布式 &lt;code&gt;id&lt;/code&gt; 如何保证全局唯一呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="分布式" scheme="https://www.pythonnote.cn/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="分布式" scheme="https://www.pythonnote.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>mysql中保存并操作json对象</title>
    <link href="https://www.pythonnote.cn/mysql%E4%B8%AD%E4%BF%9D%E5%AD%98%E5%B9%B6%E6%93%8D%E4%BD%9Cjson%E5%AF%B9%E8%B1%A1/"/>
    <id>https://www.pythonnote.cn/mysql%E4%B8%AD%E4%BF%9D%E5%AD%98%E5%B9%B6%E6%93%8D%E4%BD%9Cjson%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-03-21T03:14:18.000Z</published>
    <updated>2020-03-21T07:29:17.663Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;对于最常使用的数据格式 &lt;code&gt;json&lt;/code&gt; 而言，数据库 &lt;code&gt;mysql&lt;/code&gt; 提供了保存及一系列操作方法供大家使用，下面我们就来学习一下吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="sql" scheme="https://www.pythonnote.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="https://www.pythonnote.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>多线程如何获取结果</title>
    <link href="https://www.pythonnote.cn/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%9C/"/>
    <id>https://www.pythonnote.cn/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E7%BB%93%E6%9E%9C/</id>
    <published>2020-03-18T12:53:03.000Z</published>
    <updated>2020-03-18T13:27:04.944Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;下午的综合面试，技术方面只询问了项目，剩下时间全是背景调查，双方提问、互相了解情况。所以今天的文章就没有面试题了，总结一位老哥教我的一个知识点：多线程如何获取结果。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://www.pythonnote.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://www.pythonnote.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>菜鸟去面试之二</title>
    <link href="https://www.pythonnote.cn/%E8%8F%9C%E9%B8%9F%E5%8E%BB%E9%9D%A2%E8%AF%95%E4%B9%8B%E4%BA%8C/"/>
    <id>https://www.pythonnote.cn/%E8%8F%9C%E9%B8%9F%E5%8E%BB%E9%9D%A2%E8%AF%95%E4%B9%8B%E4%BA%8C/</id>
    <published>2020-03-17T10:07:42.000Z</published>
    <updated>2020-03-17T12:58:00.908Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;今天是华为进行的复试，明天还有综合面试。快来看一下今天的题目吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于项目以及灵活的题目此处并未体现，只将一些记忆深刻的通用题目汇总展示，希望可以帮助到大家。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://www.pythonnote.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://www.pythonnote.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>菜鸟去面试之一</title>
    <link href="https://www.pythonnote.cn/%E8%8F%9C%E9%B8%9F%E5%8E%BB%E9%9D%A2%E8%AF%95%E4%B9%8B%E4%B8%80/"/>
    <id>https://www.pythonnote.cn/%E8%8F%9C%E9%B8%9F%E5%8E%BB%E9%9D%A2%E8%AF%95%E4%B9%8B%E4%B8%80/</id>
    <published>2020-03-16T07:08:31.000Z</published>
    <updated>2020-03-16T08:40:56.127Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;春天到了，那颗躁动不安的心又踏上了面试之旅，菜鸟在前方探路，返回一手资料供你参考。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://www.pythonnote.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://www.pythonnote.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>复用Django应用，使其可以通过pip安装</title>
    <link href="https://www.pythonnote.cn/%E5%A4%8D%E7%94%A8Django%E5%BA%94%E7%94%A8%EF%BC%8C%E4%BD%BF%E5%85%B6%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87pip%E5%AE%89%E8%A3%85/"/>
    <id>https://www.pythonnote.cn/%E5%A4%8D%E7%94%A8Django%E5%BA%94%E7%94%A8%EF%BC%8C%E4%BD%BF%E5%85%B6%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87pip%E5%AE%89%E8%A3%85/</id>
    <published>2020-03-13T11:53:44.000Z</published>
    <updated>2020-03-13T13:25:04.421Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;想自己打包一个应用，可以像其他模块一样通过 &lt;code&gt;pip install&lt;/code&gt; 安装吗？在 &lt;code&gt;Django&lt;/code&gt; 项目中，一个应用如果通过此方式随用随安装是不是很帅气？快来看一下如何操作吧！&lt;/p&gt;
    
    </summary>
    
    
      <category term="django" scheme="https://www.pythonnote.cn/categories/django/"/>
    
    
      <category term="django" scheme="https://www.pythonnote.cn/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>Django迁移数据库报错解决</title>
    <link href="https://www.pythonnote.cn/Django%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/"/>
    <id>https://www.pythonnote.cn/Django%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</id>
    <published>2020-03-12T12:14:29.000Z</published>
    <updated>2020-03-13T11:55:28.210Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;&lt;code&gt;Django&lt;/code&gt; 最新版本创建应用后，迁移数据库报错怎么办？&lt;/p&gt;
    
    </summary>
    
    
      <category term="django" scheme="https://www.pythonnote.cn/categories/django/"/>
    
    
      <category term="django" scheme="https://www.pythonnote.cn/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>python的这些小知识你注意到了吗？</title>
    <link href="https://www.pythonnote.cn/python%E7%9A%84%E8%BF%99%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E4%BD%A0%E6%B3%A8%E6%84%8F%E5%88%B0%E4%BA%86%E5%90%97%EF%BC%9F/"/>
    <id>https://www.pythonnote.cn/python%E7%9A%84%E8%BF%99%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E4%BD%A0%E6%B3%A8%E6%84%8F%E5%88%B0%E4%BA%86%E5%90%97%EF%BC%9F/</id>
    <published>2020-03-10T08:07:41.000Z</published>
    <updated>2020-03-10T11:26:04.046Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;本文将对一些小知识进行汇总，这些知识也许你用了 &lt;code&gt;python&lt;/code&gt; 很久，但仍然没注意到。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://www.pythonnote.cn/categories/python/"/>
    
    
      <category term="python" scheme="https://www.pythonnote.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>docker容器网桥连接</title>
    <link href="https://www.pythonnote.cn/docker%E5%AE%B9%E5%99%A8%E7%BD%91%E6%A1%A5%E8%BF%9E%E6%8E%A5/"/>
    <id>https://www.pythonnote.cn/docker%E5%AE%B9%E5%99%A8%E7%BD%91%E6%A1%A5%E8%BF%9E%E6%8E%A5/</id>
    <published>2020-03-07T09:56:51.000Z</published>
    <updated>2020-03-07T11:24:04.417Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;
容器之间如何互相通讯？具体的命令有哪些？
    
    </summary>
    
    
      <category term="docker" scheme="https://www.pythonnote.cn/categories/docker/"/>
    
    
      <category term="docker" scheme="https://www.pythonnote.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker容器数据持久化</title>
    <link href="https://www.pythonnote.cn/docker%E5%AE%B9%E5%99%A8%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    <id>https://www.pythonnote.cn/docker%E5%AE%B9%E5%99%A8%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/</id>
    <published>2020-03-06T10:04:08.000Z</published>
    <updated>2020-03-12T12:16:26.179Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;&lt;code&gt;docker&lt;/code&gt; 容器内的数据是独立于镜像之外的，那么如何将其持久化到宿主机呢？答案便是利用「数据卷」，那什么又是「数据卷」呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://www.pythonnote.cn/categories/docker/"/>
    
    
      <category term="docker" scheme="https://www.pythonnote.cn/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>分享一份全国行政区划sql数据库表</title>
    <link href="https://www.pythonnote.cn/%E5%88%86%E4%BA%AB%E4%B8%80%E4%BB%BD%E5%85%A8%E5%9B%BD%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92sql%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8/"/>
    <id>https://www.pythonnote.cn/%E5%88%86%E4%BA%AB%E4%B8%80%E4%BB%BD%E5%85%A8%E5%9B%BD%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92sql%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8/</id>
    <published>2020-03-04T13:53:18.000Z</published>
    <updated>2020-03-04T14:56:50.137Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;还在为寻找全国行政区划的数据而烦恼吗？还在因为一个 &lt;code&gt;Excel&lt;/code&gt; 表格无法确定信息是否全面而惆怅吗？快来看看为你准备好的东西吧！&lt;/p&gt;
    
    </summary>
    
    
      <category term="sql" scheme="https://www.pythonnote.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="https://www.pythonnote.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>一起来看看火爆的手机号码一键登录</title>
    <link href="https://www.pythonnote.cn/%E4%B8%80%E8%B5%B7%E6%9D%A5%E7%9C%8B%E7%9C%8B%E7%81%AB%E7%88%86%E7%9A%84%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/"/>
    <id>https://www.pythonnote.cn/%E4%B8%80%E8%B5%B7%E6%9D%A5%E7%9C%8B%E7%9C%8B%E7%81%AB%E7%88%86%E7%9A%84%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/</id>
    <published>2020-03-03T13:41:59.000Z</published>
    <updated>2020-03-03T15:08:30.172Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt;

&lt;p&gt;不知你是否发现：大批手机 &lt;code&gt;app&lt;/code&gt; 登录页面，突然之间变成了一键登录。之前大火的 &lt;code&gt;通过手机号码获取短信验证码&lt;/code&gt; 登录模式正悄悄退去。这神奇的操作是如何实现的呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="手机号一键登录" scheme="https://www.pythonnote.cn/categories/%E6%89%8B%E6%9C%BA%E5%8F%B7%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/"/>
    
    
      <category term="手机号一键登录" scheme="https://www.pythonnote.cn/tags/%E6%89%8B%E6%9C%BA%E5%8F%B7%E4%B8%80%E9%94%AE%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>有了Pycharm，就卸载了Postman吧</title>
    <link href="https://www.pythonnote.cn/%E6%9C%89%E4%BA%86Pycharm%EF%BC%8C%E5%B0%B1%E5%8D%B8%E8%BD%BD%E4%BA%86Postman%E5%90%A7/"/>
    <id>https://www.pythonnote.cn/%E6%9C%89%E4%BA%86Pycharm%EF%BC%8C%E5%B0%B1%E5%8D%B8%E8%BD%BD%E4%BA%86Postman%E5%90%A7/</id>
    <published>2020-02-28T12:04:12.000Z</published>
    <updated>2020-02-28T13:54:56.279Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Author：闫玉良&lt;/center&gt; 

&lt;p&gt;&lt;code&gt;Web&lt;/code&gt; 开发还在一手 &lt;code&gt;PyCharm&lt;/code&gt; 一手 &lt;code&gt;Postman&lt;/code&gt; 吗？快给电脑减负（卸载掉 &lt;code&gt;Postman&lt;/code&gt;）吧！教你如何使用 &lt;code&gt;PyCharm&lt;/code&gt; 替代 &lt;code&gt;Postman&lt;/code&gt; 。&lt;/p&gt;
    
    </summary>
    
    
      <category term="pycharm" scheme="https://www.pythonnote.cn/categories/pycharm/"/>
    
    
      <category term="pycharm" scheme="https://www.pythonnote.cn/tags/pycharm/"/>
    
      <category term="postman" scheme="https://www.pythonnote.cn/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>关系数据库之存储过程</title>
    <link href="https://www.pythonnote.cn/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>https://www.pythonnote.cn/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</id>
    <published>2020-02-25T10:48:02.000Z</published>
    <updated>2020-02-25T15:58:46.905Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;很多人在上学期间，也许并未学习过关系数据库中「存储过程」的相关内容，但在工作上是绕不开的，那今天就来学习一下吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="sql" scheme="https://www.pythonnote.cn/categories/sql/"/>
    
    
      <category term="sql" scheme="https://www.pythonnote.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之聚类算法</title>
    <link href="https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    <id>https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/</id>
    <published>2020-02-24T10:34:27.000Z</published>
    <updated>2020-02-24T07:05:45.609Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;今日开启新算法的学习「聚类算法」&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="https://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之集成学习</title>
    <link href="https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-02-23T03:23:47.000Z</published>
    <updated>2020-02-24T02:36:21.500Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;分类算法中有一种极其重要的算法「集成学习」&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="https://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之决策树</title>
    <link href="https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <id>https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/</id>
    <published>2020-02-22T07:42:01.000Z</published>
    <updated>2020-02-22T11:44:35.860Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;今天来学习一种新的&lt;strong&gt;分类&lt;/strong&gt;算法「决策树」&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://www.pythonnote.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之逻辑回归</title>
    <link href="https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/"/>
    <id>https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</id>
    <published>2020-02-21T10:19:53.000Z</published>
    <updated>2020-02-23T03:24:50.272Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;逻辑回归（&lt;code&gt;Logistic Regression&lt;/code&gt;）是机器学习中的一种&lt;strong&gt;分类模型&lt;/strong&gt;。虽然名字中带有「回归」，但它却不是回归算法，而是一种分类算法。由于此算法的简单和高效，在实际场景中应用非常广泛。也许有人很好奇，那为什么叫做「回归」而不是「分类」呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="https://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之欠拟合和过拟合</title>
    <link href="https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E6%AC%A0%E6%8B%9F%E5%90%88%E5%92%8C%E8%BF%87%E6%8B%9F%E5%90%88/"/>
    <id>https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E6%AC%A0%E6%8B%9F%E5%90%88%E5%92%8C%E8%BF%87%E6%8B%9F%E5%90%88/</id>
    <published>2020-02-20T11:41:19.000Z</published>
    <updated>2020-02-20T14:36:34.861Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;引言：&lt;/strong&gt;机器学习的基本问题是利用模型对数据进行拟合，学习的目的并非是对有限训练集进行正确预测，而是对未曾在训练集合出现的样本能够正确预测。模型对训练集数据的误差称为经验误差，对测试集数据的误差称为泛化误差。模型对训练集以外样本的预测能力就称为模型的泛化能力，追求这种泛化能力始终是机器学习的目标。过拟合和欠拟合是导致模型泛化能力不高的两种常见原因，都是模型学习能力与数据复杂度之间失配的结果。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://www.pythonnote.cn/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>机器学习算法之线性回归的损失和优化</title>
    <link href="https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%92%8C%E4%BC%98%E5%8C%96/"/>
    <id>https://www.pythonnote.cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%92%8C%E4%BC%98%E5%8C%96/</id>
    <published>2020-02-19T10:36:38.000Z</published>
    <updated>2020-02-21T05:20:43.520Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;Editor：闫玉良&lt;/center&gt;

&lt;p&gt;学习了线性回归，接下来就需要考虑其损失以及优化了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="https://www.pythonnote.cn/categories/%E7%AE%97%E6%B3%95/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="算法" scheme="https://www.pythonnote.cn/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="机器学习" scheme="https://www.pythonnote.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
